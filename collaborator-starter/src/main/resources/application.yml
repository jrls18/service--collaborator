h2:
  enabled: false

spring:
  boot:
    admin:
      client:
        auto-registration: true
        instance:
          prefer-ip: true
          name: ${spring.application.name}
        url: ${properties.configMap.springBootAdminUrl}
        username: ${properties.configMap.springBootAdminUser}
        password: ${properties.configMap.springBootAdminPass}
  application:
    name: service--collaborator
  serviceId: ${spring.application.name}
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  jmx:
    enabled: true
  h2:
    console:
      enabled: false
      path: /h2-console
  flyway:
    enabled: false
    locations: classpath:db/migration
  cache:
    type: simple
    jcache:
      config: classpath:ehcache.xml
  jpa:
    generate-ddl: false
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        ddl-auto: none
        generate_statistics: true
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
  datasource:
    url: ${properties.configMap.dataBaseProtocol}:${properties.configMap.dataBaseHots}:${properties.configMap.dataBaseName}?autoReconnect=true&useSSL=false
    username: ${properties.secret.dataBaseUsername}
    driverClassName: ${properties.configMap.dataBaseClassDrive}
    driver-class-name: ${properties.configMap.dataBaseClassDrive}
    password: ${properties.secret.dataBasePassword}
    connectionTimeout: 20000
    maximumPoolSize: 6
    connectionTestQuery: SELECT CURRENT_TIMESTAMP
    hikari:
      maximum-pool-size: 3
      connection-timeout: 20000
  security:
    jwt:
      secret-key: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
      #expiration: 86400000
      expiration: 86400
      refresh-token:
        expiration: 604800000 # 7 days

  kafka:
    #security:
      #protocol: SASL_SSL
    #sasl:
      #jaas:
        #config: "org.apache.kafka.common.security.scram.ScramLoginModule required username=1234 password=1234"
      #mechanism: SCRAM-SHA-512
    bootstrap-servers: ${properties.configMap.kafkaBootstrapServers}
    properties:
      auto:
        register:
          schemas: true
      schema:
        registry:
          url: ${properties.configMap.kafkaSchemaRegistryUrl}
    producer:
      acks: 1
      retries: 3
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        specific:
          avro:
            reader: true
      enable-auto-commit: false
      auto-offset-reset: earliest
      allow:
        auto:
          create:
            topics: true

hibernate:
  generate_statistics: true

server:
  port: 5000
  servlet:
    context-path: /${spring.application.name}

management:
  security:
    enabled: true
  context-path: /actuator
  server:
    port: 9090
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always
      probes:
        enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  metrics:
    distribution:
      percentiles[http.server.requests]: 0.5, 0.7, 0.95, 0.99
      percentiles-histogram[http.server.requests]: true
      slo[http.server.requests]: 10ms, 100ms
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}

endpoints:
  caches:
    enabled: true

kafka:
  topic:
    consumer:
      qtdRetry: 5
      collaborator:
        name: service--collaborator.data-transfer.save
        id: service--collaborator.data-transfer.save.id
    produce:
      notification:
        name: service--notification.data-transfer.push
      document:
        name: service--documents.data-transfer.upload

properties:
  configMap:
    clientId: ${CLIENT_ID:89e7b6e5-a61d-4f67-b688-7b7449db096b}
    clientSecret: ${CLIENT_SECRET:343a5f53-6797-4930-82b7-1a96cb416ead}
    dataBaseHots: ${DATA_BASE_HOTS:172.26.96.1}
    dataBasePort: ${DATA_BASE_PORT:3309}
    dataBaseName: ${DATA_BASE_NAME:dbCollaborator}
    dataBaseClassDrive: ${DATA_BASE_CLASS_DRIVE:com.mysql.cj.jdbc.Driver}
    dataBaseProtocol: ${DATA_BASE_PROTOCOL:jdbc:mysql}
    kafkaBootstrapServers: ${KAFKA_BOOTSTRAP_SERVERS:192.168.15.94:9092,192.168.15.94:9093}
    kafkaSchemaRegistryUrl: ${KAFKA_SCHEMA_REGISTRY_URL:"http://192.168.15.94:8085,http://192.168.15.94:8086"}
    springBootAdminUser: ${SPRING_BOOT_ADMIN_USER:admin}
    springBootAdminPass: ${SPRING_BOOT_ADMIN_PASS:171513}
    springBootAdminUrl: ${SPRING_BOOT_ADMIN_URL:"http://localhost:8000"}
  secret:
    dataBaseUsername: ${DATA_BASE_USERNAME:user}
    dataBasePassword: ${DATA_BASE_PASSWORD:171513}

logProperties:
  typeObfuscateMask: "#"
  patternObfuscate: partial
  obfuscate:
    headers:
      - "client_secret"
      - "client_id"
      - "authorization"
    body:
      - "username"
      - "password"
      - "access_token"
      - "nome"
      - "cpf_cnpj"
      - "telefone_principal"
      - "telefone"
      - "email"
      - "codigo_empresa"
      - "numero"
      - "cep"
      - "logradouro"
      - "name"
      - "cpfCnpj"
      - "mainPhone"
      - "telephone"
      - "zipCode"
      - "publicPlace"
      - "neighborhood"
      - "location"
      - "state"
      - "number"


authentication:
  property:
    clientId: ${properties.configMap.clientId}
    clientSecret: ${properties.configMap.clientSecret}
    app: ${spring.application.name}

parameterize:
  clientId: ${properties.configMap.clientId}
  clientSecret: ${properties.configMap.clientSecret}
  scheduleCron: "0 */5 * * * *"
  timezone: America/Fortaleza
  itemsProperties:
    properties:
      - name: properties_corporation
        fieldRequest:
          - "nome-service"
        filter:
          - "propertiesGerais"
          - "urlServiceInternal"
          - "urlServiceExternal"
      - name: properties_gestao_notificacoes
        fieldRequest:
          - "nome-service"
        filter:
          - "sendEmail"
      - name: properties_gestao_de_clientes
        fieldRequest:
          - "nome-service"
        filter:
          - "serviceCollaborator"
    filterCondition:
      - "disablesKafkaContingency"
      - "enabledServiceExternalHost"
      - "disablesCallApiDocumentContingency"
      - "disablesCallApiCollaboratorContingency"
      - "sizePage"
      - "idLayoutEmail"
      - "idLayoutEmailFailBusiness"
      - "idLayoutSendMessageClientAndSupport"
      - "qtdRetry"
      - "disablesCriticalKafkaContingency"
      - "serviceCompanyExternalHost"
      - "serviceDocumentExternalHost"
      - "urlConsultaCep"
      - "serviceCompanyInternalHost"
      - "serviceDocumentInternalHost"

